<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\BLDC_Driver_ARM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\BLDC_Driver_ARM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Apr 09 21:08:10 2020
<BR><P>
<H3>Maximum Stack Usage =        304 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM4_IRQHandler &rArr; UALTHM_Controller &rArr; UALTHM_FUZZY &rArr; UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from user_adc.o(i.DMA1_Channel1_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from user_hallsensor.o(i.EXTI0_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from user_hallsensor.o(i.EXTI1_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from user_hallsensor.o(i.EXTI2_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from system_stm32f10x_1.o(i.SystemInit) referenced from startup_stm32f10x_md_1.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from user_hallsensor.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from user_can.o(i.USB_LP_CAN1_RX0_IRQHandler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md_1.o(.text) referenced from startup_stm32f10x_md_1.o(RESET)
 <LI><a href="#[37]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md_1.o(.text)
 <LI><a href="#[35]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[38]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[da]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[db]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetActualSpeed
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_UpdateParameters
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_UpdateParameters
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetBytesDutyCycle
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[e0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[e1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[e2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[3b]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[44]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[43]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[39]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e4]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[86]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[8a]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[88]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[7d]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[7e]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[87]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ResetCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[8b]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[89]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[83]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_TempSensorVrefintCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_can.o(i.CAN_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[9d]"></a>CAN_FilterInit</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, stm32f10x_can.o(i.CAN_FilterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[9f]"></a>CAN_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_can.o(i.CAN_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[9c]"></a>CAN_Init</STRONG> (Thumb, 276 bytes, Stack size 12 bytes, stm32f10x_can.o(i.CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[d0]"></a>CAN_Receive</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, stm32f10x_can.o(i.CAN_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>CAN_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_can.o(i.CAN_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[a3]"></a>CAN_Transmit</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, stm32f10x_can.o(i.CAN_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Transmit
</UL>

<P><STRONG><a name="[a4]"></a>CAN_TransmitStatus</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, stm32f10x_can.o(i.CAN_TransmitStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_TransmitStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Transmit
</UL>

<P><STRONG><a name="[52]"></a>Clock_HSE_Configuration</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, main.o(i.Clock_HSE_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Clock_HSE_Configuration &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 246 bytes, Stack size 80 bytes, user_adc.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GetAvrValue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[7f]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[60]"></a>DMA_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[80]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, user_hallsensor.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI0_IRQHandler &rArr; UHALL_ReadPosition &rArr; UPWM_ControlBLDCFET &rArr; TIM_SelectOCxM
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GetFlag
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ResetTimerCheckVeloMotor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_hallsensor.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI1_IRQHandler &rArr; UHALL_ReadPosition &rArr; UPWM_ControlBLDCFET &rArr; TIM_SelectOCxM
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GetFlag
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ResetTimerCheckVeloMotor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_hallsensor.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI2_IRQHandler &rArr; UHALL_ReadPosition &rArr; UPWM_ControlBLDCFET &rArr; TIM_SelectOCxM
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GetFlag
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ResetTimerCheckVeloMotor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[ae]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
</UL>

<P><STRONG><a name="[56]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[57]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[ad]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GPIO_Configure
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GPIO_Configure
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GPIO_Configure
</UL>

<P><STRONG><a name="[af]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputData))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[9e]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[7b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[9a]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_Configure
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
</UL>

<P><STRONG><a name="[51]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
</UL>

<P><STRONG><a name="[7c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GPIO_Configure
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GPIO_Configure
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GPIO_Configure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
</UL>

<P><STRONG><a name="[78]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[53]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[d4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[5f]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[58]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[54]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[5a]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[59]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[5c]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[5b]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[5e]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[55]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x_1.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x_1.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, user_hallsensor.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TIM4_IRQHandler &rArr; UALTHM_Controller &rArr; UALTHM_FUZZY &rArr; UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_SystemOverLoad
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_StickedMotor
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GetFlag
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GetValue
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_BDTRConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[b6]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_CCxCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>

<P><STRONG><a name="[b7]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_CCxNCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxNCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>

<P><STRONG><a name="[a8]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_us
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_ms
</UL>

<P><STRONG><a name="[76]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_us
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_ms
</UL>

<P><STRONG><a name="[cf]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[77]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_Configure
</UL>

<P><STRONG><a name="[bf]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture1))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
</UL>

<P><STRONG><a name="[68]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_us
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_ms
</UL>

<P><STRONG><a name="[6d]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
</UL>

<P><STRONG><a name="[c8]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[cb]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[c9]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[cc]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[ca]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[cd]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
</UL>

<P><STRONG><a name="[b5]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_SelectOCxM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_SelectOCxM
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[c2]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[c3]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[c4]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[69]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>

<P><STRONG><a name="[a6]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_us
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_ms
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_Configure
</UL>

<P><STRONG><a name="[79]"></a>UADC_ADC_DMA_Configure</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, user_adc.o(i.UADC_ADC_DMA_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UADC_ADC_DMA_Configure &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TempSensorVrefintCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>UADC_GPIO_Configure</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, user_adc.o(i.UADC_GPIO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UADC_GPIO_Configure &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>UADC_GetAvrValue</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, user_adc.o(i.UADC_GetAvrValue))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>UADC_GetBytesConverted</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, user_adc.o(i.UADC_GetBytesConverted))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>UADC_GetValue</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_adc.o(i.UADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>UALTHM_Controller</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, user_algorithm.o(i.UALTHM_Controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = UALTHM_Controller &rArr; UALTHM_FUZZY &rArr; UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GetFlag
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetRefDutyCycle
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>UALTHM_FUZZY</STRONG> (Thumb, 634 bytes, Stack size 192 bytes, user_algorithm.o(i.UALTHM_FUZZY))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = UALTHM_FUZZY &rArr; UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UFUZZY_Trap_mf
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetActualSpeed
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
</UL>

<P><STRONG><a name="[d3]"></a>UALTHM_GetBytesSetSpeed</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, user_algorithm.o(i.UALTHM_GetBytesSetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>UALTHM_PID_v1</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, user_algorithm.o(i.UALTHM_PID_v1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UALTHM_PID_v1 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetActualSpeed
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
</UL>

<P><STRONG><a name="[98]"></a>UALTHM_UpdateParameters</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, user_algorithm.o(i.UALTHM_UpdateParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UALTHM_UpdateParameters &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>UCAN_CAN_Configure</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, user_can.o(i.UCAN_CAN_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UCAN_CAN_Configure &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_StructInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ITConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FilterInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>UCAN_Checksum</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_can.o(i.UCAN_Checksum))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_SystemOverLoad
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_StickedMotor
</UL>

<P><STRONG><a name="[a0]"></a>UCAN_GPIO_Configure</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_can.o(i.UCAN_GPIO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UCAN_GPIO_Configure &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>UCAN_GetFlag</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, user_can.o(i.UCAN_GetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[c5]"></a>UCAN_ResetFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_can.o(i.UCAN_ResetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>

<P><STRONG><a name="[74]"></a>UCAN_StickedMotor</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_can.o(i.UCAN_StickedMotor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UCAN_StickedMotor &rArr; UCAN_Transmit &rArr; CAN_TransmitStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Transmit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>UCAN_SystemOverLoad</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_can.o(i.UCAN_SystemOverLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UCAN_SystemOverLoad &rArr; UCAN_Transmit &rArr; CAN_TransmitStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Transmit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>UCAN_Transmit</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, user_can.o(i.UCAN_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UCAN_Transmit &rArr; CAN_TransmitStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_TransmitStatus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_SystemOverLoad
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_StickedMotor
</UL>

<P><STRONG><a name="[a5]"></a>UDELAY_Configure</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_delay.o(i.UDELAY_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UDELAY_Configure &rArr; TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>UDELAY_ms</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, user_delay.o(i.UDELAY_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UDELAY_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>UDELAY_us</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, user_delay.o(i.UDELAY_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UDELAY_us
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>UFUZZY_Trap_mf</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, user_algorithm.o(i.UFUZZY_Trap_mf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UFUZZY_Trap_mf
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
</UL>

<P><STRONG><a name="[ac]"></a>UHALL_GPIO_Configure</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, user_hallsensor.o(i.UHALL_GPIO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UHALL_GPIO_Configure &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>UHALL_GetActualSpeed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_hallsensor.o(i.UHALL_GetActualSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UHALL_GetActualSpeed &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[d1]"></a>UHALL_GetBytesActualSpeed</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetBytesActualSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>UHALL_GetHALLHA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLHA))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[b9]"></a>UHALL_GetHALLHB</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLHB))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[bb]"></a>UHALL_GetHALLHC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLHC))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[b8]"></a>UHALL_GetHALLLA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLLA))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[ba]"></a>UHALL_GetHALLLB</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLLB))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[bc]"></a>UHALL_GetHALLLC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_GetHALLLC))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>

<P><STRONG><a name="[b0]"></a>UHALL_MotorStatus</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, user_hallsensor.o(i.UHALL_MotorStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UHALL_MotorStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ResetTimerCheckVeloMotor
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>

<P><STRONG><a name="[67]"></a>UHALL_ReadPosition</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, user_hallsensor.o(i.UHALL_ReadPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UHALL_ReadPosition &rArr; UPWM_ControlBLDCFET &rArr; TIM_SelectOCxM
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_ControlBLDCFET
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>UHALL_ResetPosHall</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_ResetPosHall))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>

<P><STRONG><a name="[65]"></a>UHALL_ResetTimerCheckVeloMotor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_hallsensor.o(i.UHALL_ResetTimerCheckVeloMotor))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_MotorStatus
</UL>

<P><STRONG><a name="[b2]"></a>UHALL_TIM_Configure</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, user_hallsensor.o(i.UHALL_TIM_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UHALL_TIM_Configure &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>UPWM_ControlBLDCFET</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, user_pwm.o(i.UPWM_ControlBLDCFET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UPWM_ControlBLDCFET &rArr; TIM_SelectOCxM
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLLC
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLLB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLLA
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLHC
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLHB
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetHALLHA
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOCxM
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNCmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
</UL>

<P><STRONG><a name="[bd]"></a>UPWM_GPIO_Configure</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, user_pwm.o(i.UPWM_GPIO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UPWM_GPIO_Configure &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>UPWM_GetBytesDutyCycle</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, user_pwm.o(i.UPWM_GetBytesDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UPWM_GetBytesDutyCycle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>UPWM_GetRefDutyCycle</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, user_pwm.o(i.UPWM_GetRefDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UPWM_GetRefDutyCycle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>UPWM_SetBytesDutyCycle</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, user_pwm.o(i.UPWM_SetBytesDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UPWM_SetBytesDutyCycle &rArr; UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>UPWM_SetDutyCycle</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, user_pwm.o(i.UPWM_SetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UPWM_SetDutyCycle &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_MotorStatus
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_PID_v1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_FUZZY
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetBytesDutyCycle
</UL>

<P><STRONG><a name="[71]"></a>UPWM_StopPWM</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, user_pwm.o(i.UPWM_StopPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UPWM_StopPWM &rArr; TIM_CCxNCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ResetPosHall
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_ResetFlag
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNCmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_Controller
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetDutyCycle
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>UPWM_TIM_Configure</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, user_pwm.o(i.UPWM_TIM_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UPWM_TIM_Configure &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 2020 bytes, Stack size 16 bytes, user_can.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; UPWM_GetBytesDutyCycle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_us
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_GetBytesSetSpeed
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GetBytesConverted
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Transmit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_Checksum
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_ReadPosition
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetBytesActualSpeed
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GetActualSpeed
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_SetBytesDutyCycle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GetBytesDutyCycle
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_UpdateParameters
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_1.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = main &rArr; UADC_ADC_DMA_Configure &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_TIM_Configure
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_StopPWM
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UPWM_GPIO_Configure
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_TIM_Configure
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UHALL_GPIO_Configure
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_ms
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDELAY_Configure
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_GPIO_Configure
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCAN_CAN_Configure
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UALTHM_UpdateParameters
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_GPIO_Configure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UADC_ADC_DMA_Configure
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_HSE_Configuration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6b]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x_1.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6c]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x_1.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
